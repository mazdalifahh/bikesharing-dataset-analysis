####
'''
# Plot dengan berdasarkan tahun
# Plot dengan hue berdasarkan tahun
plt.figure(figsize=(10, 5))
sns.lineplot(data=df_main, x='month', y='cnt', hue='year', marker="o")

plt.xticks(range(1, 13))  # Menampilkan angka bulan dengan benar (1-12)
plt.title("Tren Penyewaan Sepeda per Bulan (2011 vs 2012)")
plt.xlabel("Bulan")
plt.ylabel("Jumlah Penyewaan")
plt.grid()
st.pyplot(plt)  # Display the plot in Streamlit

##Penyewaan Sepeda Berdasarkan hari dan jam
# Pilih warna tunggal untuk semua bar
single_color = "steelblue"  # Ganti dengan warna lain jika diinginkan

# Pola Penyewaan Sepeda Berdasarkan Hari dalam Seminggu
st.subheader("Pola Penyewaan Sepeda yang Berbeda Berdasarkan Hari")

# Group by 'weekday' to get average count of rentals per day
daily_rentals = df_main.groupby('weekday')['cnt'].mean().reset_index()

# Plot bar chart for daily rentals dengan satu warna saja
plt.figure(figsize=(10, 5))
sns.barplot(data=daily_rentals, x='weekday', y='cnt', color=single_color)
plt.title('Penyewaan Sepeda Berdasarkan Hari dalam Seminggu')
plt.xlabel('Hari')
plt.ylabel('Jumlah Penyewa')
plt.xticks(ticks=range(7), labels=["Sen", "Sel", "Rab", "Kam", "Jum", "Sab", "Min"])
plt.grid(axis='y')
st.pyplot(plt)  # Display the plot in Streamlit

# Pola Penyewaan Sepeda per Jam
st.subheader("Pola Penyewaan Sepeda per Jam")

# Plotkan tren penyewaan sepeda per jam dengan warna yang sama
plt.figure(figsize=(10, 5))
sns.lineplot(data=df_main, x='hr', y='cnt', marker="o", color=single_color)
plt.title('Pola Penyewaan Sepeda per Jam')
plt.xlabel('Jam')
plt.ylabel('Jumlah Penyewa')
plt.xticks(range(0, 24))
plt.grid()
st.pyplot(plt)  # Display the plot in Streamlit


## Musim dan Cuaca
# Add subheader for this section
st.subheader("Pengaruh Musim dan Cuaca terhadap Penyewaan Sepeda")

# Plot boxplot untuk pengaruh musim terhadap penyewaan sepeda
plt.figure(figsize=(8, 5))
sns.boxplot(data=df_main, x='season', y='cnt', hue='season', palette="pastel", dodge=False)

# Label musim
plt.xticks([0, 1, 2, 3], ["Spring", "Summer", "Fall", "Winter"])  # Ubah angka jadi label musim
plt.title("Pengaruh Musim terhadap Penyewaan Sepeda")
plt.xlabel("Musim")
plt.ylabel("Jumlah Penyewaan")
plt.legend([],[], frameon=False)  # Hilangkan legend karena hue dan x sama
plt.grid()
st.pyplot(plt)  # Display the plot in Streamlit

# Plot boxplot untuk pengaruh cuaca terhadap penyewaan sepeda
plt.figure(figsize=(8, 5))
sns.boxplot(data=df_main, x='weathersit', y='cnt', hue='weathersit', palette="pastel", dodge=False)

# Label cuaca
plt.xticks([0, 1, 2, 3], ["Clear", "Mist", "Light Snow/Rain", "Heavy Rain/Snow"])  # Ubah angka jadi label deskriptif cuaca
plt.title("Pengaruh Cuaca terhadap Penyewaan Sepeda")
plt.xlabel("Kondisi Cuaca")
plt.ylabel("Jumlah Penyewa")
plt.legend([],[], frameon=False)  # Hilangkan legend karena hue dan x sama
plt.grid()
st.pyplot(plt)  # Display the plot in Streamlit

## Hari kerja dan Libur
import matplotlib.pyplot as plt
import seaborn as sns

# Analisis peminjaman sepeda berdasarkan hari kerja vs libur

# Add subheader for this section
st.subheader("Peminjaman Sepeda berdasarkan Hari Kerja vs Hari Libur")

plt.figure(figsize=(8,5))
sns.barplot(data=df_main, x='workingday', y='cnt', palette="Blues_d")
plt.xticks([0, 1], ['Hari Libur', 'Hari Kerja'])
plt.xlabel('Hari')
plt.ylabel('Jumlah Peminjaman')
plt.title('Peminjaman Sepeda pada Hari Kerja vs Hari Libur')
plt.grid(axis='y')
plt.show()
st.pyplot(plt)  # Display the plot in Streamlit

## Analisis Peminjaman berdasarkan Musim dan kategori Pengguna
# Add subheader for this section
st.subheader("Peminjaman berdasarkan Musim dan Kategori Pengguna")

# Clustering berdasarkan musim
season_map = {1: 'Spring', 2: 'Summer', 3: 'Fall', 4: 'Winter'}
df_main['season_name'] = df_main['season'].map(season_map)

# Visualisasi peminjaman berdasarkan musim
plt.figure(figsize=(8, 5))
sns.barplot(data=df_main, x='season_name', y='cnt', order=['Spring', 'Summer', 'Fall', 'Winter'], palette="viridis")
plt.xlabel('Musim')
plt.ylabel('Jumlah Peminjaman')
plt.title('Peminjaman Sepeda Berdasarkan Musim')
plt.grid(axis='y')
plt.show()
st.pyplot(plt)  # Display the plot in Streamlit
'''

####